# -*- coding: utf-8 -*-
"""bls_jobs_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vJe0PbAtoFnONc6A8VJnQKT9Cd0woAIz
"""
import requests
import pandas as pd
import plotly.express as px
import streamlit as st
from datetime import datetime

# Streamlit App Title
st.title("BLS Employment and Unemployment Data Dashboard")

# BLS API Key (replace with your own key)
API_KEY = "44b5edc711ba40c8885a6d169dfefbf8"

# Fetch data from BLS API
@st.cache_data
def fetch_data(series_id):
    url = "https://api.bls.gov/publicAPI/v2/timeseries/data/"
    headers = {"Content-Type": "application/json"}
    payload = {
        "seriesid": [series_id],
        "startyear": "2014",
        "endyear": str(datetime.now().year),
        "registrationkey": API_KEY,
    }

    response = requests.post(url, json=payload, headers=headers)
    if response.status_code == 200:
        json_data = response.json()
        series_data = json_data.get("Results", {}).get("series", [])
        if series_data:
            data_points = series_data[0].get("data", [])
            data = [
                {"date": f"{dp['periodName']} {dp['year']}", "value": float(dp["value"])}
                for dp in data_points
            ]
            df = pd.DataFrame(data)
            df["date"] = pd.to_datetime(df["date"], format="%B %Y")
            df = df.sort_values(by="date")
            return df
    else:
        st.error(f"Error fetching data: {response.status_code} - {response.text}")
        return pd.DataFrame()

# Calculate percentage change
def calculate_percentage_change(df, comparison_type):
    df = df.copy()
    if comparison_type == "MoM":
        df["change"] = df["value"].pct_change() * 100
        title = "Employment Percent Change by Month"
    elif comparison_type == "YoY":
        df["change"] = df["value"].pct_change(12) * 100
        title = "Employment Percent Change by Year"
    return df, title

# Fetch employment and unemployment data
employment_df = fetch_data("CES0000000001")  # Non-farm employment
unemployment_df = fetch_data("LNS14000000")  # Unemployment rate

if not employment_df.empty and not unemployment_df.empty:
    unemployment_df["type"] = "Unemployment Rate"
    employment_df["type"] = "Non-Farm Employment Level"
    combined_df = pd.concat([employment_df, unemployment_df])

    # Data Selection
    st.subheader("BLS Non-Farm Employment and Unemployment Data")
    st.dataframe(combined_df)

    data_type = st.selectbox(
        "Select Data Type:",
        [
            "Non-Farm Employment Level",
            "Unemployment Rate",
            "Employment Percentage Change by Month",
            "Employment Percentage Change by Year",
        ],
    )

    # Plot Data
    if data_type in ["Non-Farm Employment Level", "Unemployment Rate"]:
        filtered_df = combined_df[combined_df["type"] == data_type]
        fig = px.line(
            filtered_df,
            x="date",
            y="value",
            title=data_type,
            labels={"date": "Date", "value": "Level"},
            template="simple_white",
        )
    else:
        comparison_type = "MoM" if "Month" in data_type else "YoY"
        change_df, title = calculate_percentage_change(employment_df, comparison_type)
        fig = px.line(
            change_df,
            x="date",
            y="change",
            title=title,
            labels={"date": "Date", "change": "% Change"},
            template="simple_white",
        )

    st.plotly_chart(fig)
else:
    st.info("No data available to display.")
